sim-bpred: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: simplesim-3.0/sim-bpred -bpred 2lev -max:inst 2000000000 ../Downloads/benchmarks/go/go.ss 9 9 

sim: simulation started @ Thu May 15 13:31:56 2014, options follow:

sim-bpred: This simulator implements a branch predictor analyzer.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst          2000000000 # maximum number of inst's to execute
-bpred                   2lev # branch predictor type {nottaken|taken|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.



sim: ** starting functional simulation w/ predictors **
  1 B D7 
  2 W C4 
  3 B F3 
  4 W E3 
  5 B F2 
  6 W E2 
  7 B E1 
  8 W D1 
  9 B F1 
 10 W D3 
 11 B C6 
 12 W F4 
 13 B G3 
 14 W G4 
 15 B H4 
 16 W H5 
 17 B H2 
 18 W J4 
 19 B H3 
 20 W G6 
 21 B B5 
 22 W B4 
 23 B F5 
 24 W E5 
 25 B F6 
 26 W F7 
 27 B E6 
 28 W G5 
 29 B G7 
 30 W C5 
 31 B B6 
 32 W H7 
 33 B D5 
 34 W G8 
 35 B E8 
 36 W F8 
 37 B E7 
 38 W E9 
 39 B E4 
 40 W D4 
 41 B E5 
 42 W C2 
 43 B D9 
 44 W J3 
 45 B J2 
 46 W C8 
 47 B C7 
 48 W F9 
 49 B B8 
 50 W J5 
 51 B B3 
 52 W B2 
 53 B A4 
 54 W C3 
 55 B A3 
 56 W A2 
 57 B A5 
 58 W pass
 59 B pass
Game over

sim: ** simulation statistics **
sim_num_insn              132916456 # total number of instructions executed
sim_num_refs               36715740 # total number of loads and stores executed
sim_elapsed_time                  4 # total simulation time in seconds
sim_inst_rate          33229114.0000 # simulation speed (in insts/sec)
sim_num_branches           20226276 # total number of branches executed
sim_IPB                      6.5715 # instruction per branch
bpred_2lev.lookups         20226276 # total number of bpred lookups
bpred_2lev.updates         20226276 # total number of updates
bpred_2lev.addr_hits       14964435 # total number of address-predicted hits
bpred_2lev.dir_hits        15351814 # total number of direction-predicted hits (includes addr-hits)
bpred_2lev.misses           4874462 # total number of misses
bpred_2lev.jr_hits          1456765 # total number of address-predicted hits for JR's
bpred_2lev.jr_seen          1522910 # total number of JR's seen
bpred_2lev.jr_non_ras_hits.PP        69517 # total number of address-predicted hits for non-RAS JR's
bpred_2lev.jr_non_ras_seen.PP       134714 # total number of non-RAS JR's seen
bpred_2lev.bpred_addr_rate    0.7399 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_2lev.bpred_dir_rate    0.7590 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_2lev.bpred_jr_rate    0.9566 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_2lev.bpred_jr_non_ras_rate.PP    0.5160 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_2lev.retstack_pushes      1388200 # total number of address pushed onto ret-addr stack
bpred_2lev.retstack_pops      1388196 # total number of address popped off of ret-addr stack
bpred_2lev.used_ras.PP      1388196 # total number of RAS predictions used
bpred_2lev.ras_hits.PP      1387248 # total number of RAS hits
bpred_2lev.ras_rate.PP    0.9993 # RAS prediction rate (i.e., RAS hits/used RAS)

